# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2019-01-21 14:06
from __future__ import unicode_literals

# import audit_log.models.fields
from audit_log import registration
import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mcms.thumbs

class LastUserField(models.ForeignKey):
    """
    A field that keeps the last user that saved an instance
    of a model. None will be the value for AnonymousUser.
    """
    
    def __init__(self, to = getattr(settings, 'AUTH_USER_MODEL', 'auth.User'), null = True, editable = False,  **kwargs):
        super(LastUserField, self).__init__(to = to, null = null, editable = editable, **kwargs)
    
    def contribute_to_class(self, cls, name):
        super(LastUserField, self).contribute_to_class(cls, name)
        registry = registration.FieldRegistry(self.__class__)
        registry.add_field(cls, self)

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('csr', '0001_initial'),
        ('mcms', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Events', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cause',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('icon', mcms.thumbs.ImageWithThumbsField(blank=True, help_text=b'Upload Logo of size 90x120.', null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, verbose_name='Slug')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NGO.Cause')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CharityBib',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('dob', models.DateField(blank=True, null=True, verbose_name=b'Date of Birth')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=80, null=True, verbose_name=b'Gender')),
                ('phone_no', models.CharField(blank=True, max_length=10, null=True, verbose_name=b'Phone Number')),
                ('emergency_name', models.CharField(blank=True, max_length=80, null=True, verbose_name=b'Emergency Name')),
                ('emergency_number', models.CharField(blank=True, max_length=80, null=True, verbose_name=b'Emergency Number')),
                ('friend_number1', models.CharField(blank=True, max_length=20, null=True, verbose_name=b'Friend Number1')),
                ('friend_number2', models.CharField(blank=True, max_length=20, null=True, verbose_name=b'Friend Number2')),
                ('target_hrs', models.CharField(blank=True, max_length=20, null=True, verbose_name=b'Target Hours')),
                ('target_min', models.CharField(blank=True, max_length=20, null=True, verbose_name=b'Target Minutes')),
                ('proof', models.FileField(blank=True, help_text=b'Upload files in Pdf/Image', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'Upload ID Proof')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DoantionMailer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('object_id', models.PositiveIntegerField()),
                ('html', models.CharField(blank=True, max_length=100, null=True)),
                ('mailtype', models.CharField(blank=True, choices=[(b'Donation', b'Donation'), (b'Registration', b'Registration'), (b'AdminMails', b'AdminMails')], max_length=100, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('sender', models.CharField(blank=True, max_length=100, null=True)),
                ('receiver', models.CharField(blank=True, max_length=200, null=True)),
                ('functionname', models.CharField(blank=True, max_length=100, null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=3, verbose_name='Title *')),
                ('first_name', models.CharField(max_length=80, verbose_name='First name *')),
                ('last_name', models.CharField(blank=True, max_length=80, null=True, verbose_name='Last name ')),
                ('email', models.EmailField(max_length=60, verbose_name=b'Email*')),
                ('address1', models.CharField(blank=True, max_length=80, null=True, verbose_name='Address1')),
                ('address2', models.CharField(blank=True, max_length=80, null=True, verbose_name='Address2')),
                ('postal_code', models.CharField(blank=True, max_length=6, null=True, verbose_name='Pincode*')),
                ('city', models.CharField(blank=True, max_length=80, null=True, verbose_name='City*')),
                ('state', models.CharField(blank=True, max_length=80, null=True, verbose_name='State*')),
                ('country', models.CharField(blank=True, max_length=80, null=True, verbose_name='Country*')),
                ('amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='Amount for donation*')),
                ('payment_type', models.CharField(blank=True, max_length=30, null=True)),
                ('paid_on', models.DateTimeField(auto_now_add=True)),
                ('txnid', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Transaction Id')),
                ('product_info', models.CharField(max_length=80, verbose_name='Product Info')),
                ('approved_on', models.DateTimeField(blank=True, null=True, verbose_name=b'Approved On')),
                ('payment_status', models.CharField(blank=True, choices=[('Success', 'Success'), ('Failure', 'Failure'), ('Pending', 'Pending'), ('Cancel', 'Cancel')], max_length=80, null=True, verbose_name='Payment Status')),
                ('mode', models.CharField(blank=True, max_length=80, null=True, verbose_name='Mode')),
                ('reciept_no', models.CharField(blank=True, max_length=80, null=True, verbose_name='VPC_Reciept No.')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('error_text', models.CharField(blank=True, max_length=300, null=True)),
                ('dtype', models.CharField(blank=True, max_length=200, null=True)),
                ('transaction', models.CharField(blank=True, max_length=200, null=True)),
                ('pan_card', models.CharField(blank=True, max_length=200, null=True)),
                ('mobile', models.CharField(blank=True, max_length=200, null=True)),
                ('thank_msg', models.CharField(blank=True, max_length=450, null=True)),
                ('payment_details', models.CharField(blank=True, max_length=1000, null=True)),
                ('mail_sent', models.BooleanField(default=False)),
                ('razor_donation', models.BooleanField(default=False)),
                ('paytm_donation', models.BooleanField(default=False)),
                ('csrproject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='csr.CsrProjects')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Events.Event')),
            ],
        ),
        migrations.CreateModel(
            name='DuplicateCorporates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200, verbose_name=b'Corporate Name')),
                ('team', models.CharField(blank=True, choices=[(b'Team-10', b'Team-10'), (b'Team-12', b'Team-12'), (b'Team-15', b'Team-15'), (b'Team-25', b'Team-25'), (b'Team-40', b'Team-40'), (b'Team-45', b'Team-45'), (b'Team-60', b'Team-60'), (b'Team-100', b'Team-100')], max_length=200, null=True, verbose_name=b'Select Team')),
                ('no_of_teams', models.IntegerField(default=1)),
            ],
            options={
                'db_table': 'NGO_duplicate_corporates',
            },
        ),
        migrations.CreateModel(
            name='Fundraiser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('company_name', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Company Name ')),
                ('title', models.CharField(max_length=100, verbose_name=b'Fundraising Page Title(100 Character Max):*')),
                ('slug', models.SlugField(verbose_name='Pick a URL people can remember: *')),
                ('icon', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('description', ckeditor.fields.RichTextField(verbose_name=b'Your Appeal to People :*')),
                ('thank_msg', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name=b'Write a thank you message:(This message goes to your donors as soon as they donate) :*')),
                ('goal_amount', models.IntegerField(blank=True, null=True, verbose_name=b'Amount of money you hope to raise:*')),
                ('atype', models.CharField(blank=True, choices=[(b'iCare', b'iCare'), (b'care champion silver', b'care champion silver'), (b'care champion gold', b'care champion gold'), (b'Corporate care team 30', b'Corporate care team 30'), (b'Corporate care team 20', b'Corporate care team 20')], max_length=200, null=True, verbose_name=b'Appeal Type ')),
                ('display_name', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Display Name')),
                ('meta_title', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Meta Page Title')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name=b'Meta Description')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fundraiser_createdby', to=settings.AUTH_USER_MODEL)),
                ('donation', models.ManyToManyField(related_name='Fundraiser_Donation', to='NGO.Donation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FundraiserAuditLogEntry',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('company_name', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Company Name ')),
                ('title', models.CharField(max_length=100, verbose_name=b'Fundraising Page Title(100 Character Max):*')),
                ('slug', models.SlugField(verbose_name='Pick a URL people can remember: *')),
                ('icon', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('description', ckeditor.fields.RichTextField(verbose_name=b'Your Appeal to People :*')),
                ('thank_msg', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name=b'Write a thank you message:(This message goes to your donors as soon as they donate) :*')),
                ('goal_amount', models.IntegerField(blank=True, null=True, verbose_name=b'Amount of money you hope to raise:*')),
                ('atype', models.CharField(blank=True, choices=[(b'iCare', b'iCare'), (b'care champion silver', b'care champion silver'), (b'care champion gold', b'care champion gold'), (b'Corporate care team 30', b'Corporate care team 30'), (b'Corporate care team 20', b'Corporate care team 20')], max_length=200, null=True, verbose_name=b'Appeal Type ')),
                ('display_name', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Display Name')),
                ('meta_title', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Meta Page Title')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name=b'Meta Description')),
                ('action_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('action_type', models.CharField(choices=[('I', 'Created'), ('U', 'Changed'), ('D', 'Deleted')], editable=False, max_length=1)),
                ('action_user', LastUserField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='_fundraiser_audit_log_entry', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='_auditlog_fundraiser_createdby', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-action_date',),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='FundraiserType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('slug', models.SlugField(verbose_name='Pick a URL people can remember: *')),
                ('color', models.CharField(blank=True, max_length=100, null=True)),
                ('event_index', models.IntegerField(blank=True, null=True)),
                ('fund_choice', models.CharField(blank=True, choices=[(b'Individual', b'Individual'), (b'Corporate', b'Corporate')], max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FundraiserTypeDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('download_form', models.FileField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'Download Form')),
                ('minimum_pledge', models.CharField(blank=True, help_text=b'Display in Front End', max_length=200, null=True, verbose_name=b'Minimum Pledge')),
                ('enter_in_digits', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Enter in digits')),
                ('reg_support', models.BooleanField(default=False)),
                ('car_parking', models.BooleanField(default=False)),
                ('ftype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NGO.FundraiserType')),
            ],
            options={
                'db_table': 'NGO_fundraisertype_details',
            },
        ),
        migrations.CreateModel(
            name='Need',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100, verbose_name='Title*')),
                ('icon', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('description', ckeditor.fields.RichTextField(blank=True, max_length=150, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.CharField(blank=True, max_length=100, null=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NGO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=150, verbose_name=b'Name of the CSO')),
                ('register_status', models.PositiveIntegerField(choices=[(0, b'Inactive'), (1, b'Pending'), (2, b'Existing data')], default=1)),
                ('front_image', mcms.thumbs.ImageWithThumbsField(blank=True, help_text=b'Upload Logo of size 90x120.', null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('reg_no', models.CharField(max_length=40, verbose_name=b'Charity Registration No')),
                ('validity_80G', models.CharField(choices=[('NA', b'Not Applicable'), ('PM', b'Permanent'), ('PD', b'Pending'), ('VA', b'Valid')], max_length=50, verbose_name=b'80G Validity')),
                ('validity_80G_date', models.DateField(blank=True, null=True, verbose_name=b'80G Validity Till')),
                ('validity_35AC', models.CharField(choices=[('NA', b'Not Applicable'), ('VA', b'Valid')], max_length=50, verbose_name=b'35 AC Validity')),
                ('validity_35AC_date', models.DateField(blank=True, null=True, verbose_name=b'35AC Validity Till')),
                ('acronym', models.CharField(blank=True, max_length=10, null=True, verbose_name=b'ACRONYM')),
                ('fcra', models.CharField(blank=True, choices=[('NA', b'Not Applicable'), ('VA', b'Applicable')], max_length=50, null=True, verbose_name=b'FCRA')),
                ('fcra_text', models.CharField(blank=True, max_length=30, null=True, verbose_name=b'FCRA NO')),
                ('fcra_date', models.DateField(blank=True, null=True, verbose_name=b'FCRA Validity Till')),
                ('a12', models.CharField(blank=True, max_length=30, null=True, verbose_name=b'12A')),
                ('established_on', models.DateField(verbose_name=b'Year Founded')),
                ('regn_type', models.CharField(blank=True, choices=[('Trust', 'Trust'), ('Society', 'Society'), ('Pvt Ltd Company', 'Pvt Ltd Company'), ('Section 25 Company', 'Section 25 Company'), ('Others', 'Others')], max_length=30, null=True, verbose_name=b'Regn Type')),
                ('icon', mcms.thumbs.ImageWithThumbsField(blank=True, help_text=b'Upload logo of size less than 1Mb.', null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('size', models.CharField(choices=[('VS', b'Very Small 0-0.99 Lakh'), ('S', b'Small 0-2.99 Crore'), ('M', b'Medium 3-7.99 Crore'), ('L', b'Large 8 and above')], max_length=3, verbose_name=b'Turnover/Size')),
                ('our_mission', ckeditor.fields.RichTextField(help_text=b'Should not exceed 210 characters', verbose_name=b'Mission Statement')),
                ('work_acheivement', ckeditor.fields.RichTextField(blank=True, help_text=b'Should not exceed 1900 characters', null=True, verbose_name=b'Our Work')),
                ('youtube_embedd', models.URLField(blank=True, help_text=b'For example : https://www.youtube.com/embed/23WbluYCUe8', null=True, verbose_name=b'Youtube Embedded Link')),
                ('slug', models.SlugField(blank=True, help_text=b'For example : http://www.icfn.in/adhm/YOURTEXT/', null=True, verbose_name='Your own india cares url')),
                ('fund_utilisation_statement', models.CharField(blank=True, help_text=b'Should not exceed 350 characters', max_length=400, null=True, verbose_name=b'Fund Requirement statement')),
                ('black_board_message', ckeditor.fields.RichTextField(blank=True, help_text=b'Should not exceed 190 characters', null=True, verbose_name=b'Black board messages')),
                ('reference', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Reference ID')),
                ('accept_donation', models.BooleanField(default=0)),
                ('goal_amount', models.PositiveIntegerField(blank=True, null=True)),
                ('credibility_norms', models.BooleanField(default=False, verbose_name=b'Do you follow the Credibility Alliance norms for transparency and Disclosure')),
                ('primary_focus', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Focus(Primary)')),
                ('secondary_focus', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Secondary')),
                ('latest_fin', models.FileField(blank=True, help_text=b'Upload files in Pdf/Image', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'Latest Financials')),
                ('audited_balance_sheet', models.FileField(blank=True, help_text=b'Upload files in Pdf/Image', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'Upload Audited Balance Sheet')),
                ('profit_loss_statement', models.FileField(blank=True, help_text=b'Upload files in Pdf/Image', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'Upload Profit & Loss Statement')),
                ('undertakng', models.FileField(blank=True, help_text=b'Upload files in Pdf/Image', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'Upload Undertaking')),
                ('g80_receipt', models.FileField(blank=True, help_text=b'Upload files in Pdf/Image', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'80G Approval')),
                ('a12_receipt', models.FileField(blank=True, help_text=b'Upload files in Pdf/Image', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'12A Approval')),
                ('fcra_receipt', models.FileField(blank=True, help_text=b'Upload files in Pdf/Image', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'FCRA Receipt')),
                ('pan_card', models.FileField(blank=True, help_text=b'Upload files in Pdf/Image', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'Pan Card')),
                ('for_donate_mail', models.BooleanField(default=False)),
                ('for_fundraise_page', models.BooleanField(default=False)),
                ('for_every_month_report', models.BooleanField(default=False)),
                ('display_in_main', models.BooleanField(default=False)),
                ('already_activated', models.BooleanField(default=True)),
                ('frontend_registered', models.BooleanField(default=False)),
                ('meta_title', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Meta Page Title')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name=b'Meta Description')),
                ('donation_min_amount', models.IntegerField(blank=True, null=True)),
                ('cause', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cso_causes', to='NGO.Cause', verbose_name=b'Primary Cause')),
                ('contact_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cso_contactperson', to='mcms.UserProfile')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name_plural': 'NGO',
            },
        ),
        migrations.CreateModel(
            name='NgoAppeals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField()),
                ('appeal_for', models.CharField(max_length=100)),
                ('ngo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NGO.NGO')),
            ],
            options={
                'db_table': 'NGO_ngo_appeals',
            },
        ),
        migrations.CreateModel(
            name='NGOAuditLogEntry',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=150, verbose_name=b'Name of the CSO')),
                ('register_status', models.PositiveIntegerField(choices=[(0, b'Inactive'), (1, b'Pending'), (2, b'Existing data')], default=1)),
                ('front_image', mcms.thumbs.ImageWithThumbsField(blank=True, help_text=b'Upload Logo of size 90x120.', null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('reg_no', models.CharField(max_length=40, verbose_name=b'Charity Registration No')),
                ('validity_80G', models.CharField(choices=[('NA', b'Not Applicable'), ('PM', b'Permanent'), ('PD', b'Pending'), ('VA', b'Valid')], max_length=50, verbose_name=b'80G Validity')),
                ('validity_80G_date', models.DateField(blank=True, null=True, verbose_name=b'80G Validity Till')),
                ('validity_35AC', models.CharField(choices=[('NA', b'Not Applicable'), ('VA', b'Valid')], max_length=50, verbose_name=b'35 AC Validity')),
                ('validity_35AC_date', models.DateField(blank=True, null=True, verbose_name=b'35AC Validity Till')),
                ('acronym', models.CharField(blank=True, max_length=10, null=True, verbose_name=b'ACRONYM')),
                ('fcra', models.CharField(blank=True, choices=[('NA', b'Not Applicable'), ('VA', b'Applicable')], max_length=50, null=True, verbose_name=b'FCRA')),
                ('fcra_text', models.CharField(blank=True, max_length=30, null=True, verbose_name=b'FCRA NO')),
                ('fcra_date', models.DateField(blank=True, null=True, verbose_name=b'FCRA Validity Till')),
                ('a12', models.CharField(blank=True, max_length=30, null=True, verbose_name=b'12A')),
                ('established_on', models.DateField(verbose_name=b'Year Founded')),
                ('regn_type', models.CharField(blank=True, choices=[('Trust', 'Trust'), ('Society', 'Society'), ('Pvt Ltd Company', 'Pvt Ltd Company'), ('Section 25 Company', 'Section 25 Company'), ('Others', 'Others')], max_length=30, null=True, verbose_name=b'Regn Type')),
                ('icon', mcms.thumbs.ImageWithThumbsField(blank=True, help_text=b'Upload logo of size less than 1Mb.', null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('size', models.CharField(choices=[('VS', b'Very Small 0-0.99 Lakh'), ('S', b'Small 0-2.99 Crore'), ('M', b'Medium 3-7.99 Crore'), ('L', b'Large 8 and above')], max_length=3, verbose_name=b'Turnover/Size')),
                ('our_mission', ckeditor.fields.RichTextField(help_text=b'Should not exceed 210 characters', verbose_name=b'Mission Statement')),
                ('work_acheivement', ckeditor.fields.RichTextField(blank=True, help_text=b'Should not exceed 1900 characters', null=True, verbose_name=b'Our Work')),
                ('youtube_embedd', models.URLField(blank=True, help_text=b'For example : https://www.youtube.com/embed/23WbluYCUe8', null=True, verbose_name=b'Youtube Embedded Link')),
                ('slug', models.SlugField(blank=True, help_text=b'For example : http://www.icfn.in/adhm/YOURTEXT/', null=True, verbose_name='Your own india cares url')),
                ('fund_utilisation_statement', models.CharField(blank=True, help_text=b'Should not exceed 350 characters', max_length=400, null=True, verbose_name=b'Fund Requirement statement')),
                ('black_board_message', ckeditor.fields.RichTextField(blank=True, help_text=b'Should not exceed 190 characters', null=True, verbose_name=b'Black board messages')),
                ('reference', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Reference ID')),
                ('accept_donation', models.BooleanField(default=0)),
                ('goal_amount', models.PositiveIntegerField(blank=True, null=True)),
                ('credibility_norms', models.BooleanField(default=False, verbose_name=b'Do you follow the Credibility Alliance norms for transparency and Disclosure')),
                ('primary_focus', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Focus(Primary)')),
                ('secondary_focus', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Secondary')),
                ('latest_fin', models.FileField(blank=True, help_text=b'Upload files in Pdf/Image', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'Latest Financials')),
                ('audited_balance_sheet', models.FileField(blank=True, help_text=b'Upload files in Pdf/Image', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'Upload Audited Balance Sheet')),
                ('profit_loss_statement', models.FileField(blank=True, help_text=b'Upload files in Pdf/Image', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'Upload Profit & Loss Statement')),
                ('undertakng', models.FileField(blank=True, help_text=b'Upload files in Pdf/Image', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'Upload Undertaking')),
                ('g80_receipt', models.FileField(blank=True, help_text=b'Upload files in Pdf/Image', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'80G Approval')),
                ('a12_receipt', models.FileField(blank=True, help_text=b'Upload files in Pdf/Image', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'12A Approval')),
                ('fcra_receipt', models.FileField(blank=True, help_text=b'Upload files in Pdf/Image', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'FCRA Receipt')),
                ('pan_card', models.FileField(blank=True, help_text=b'Upload files in Pdf/Image', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'Pan Card')),
                ('for_donate_mail', models.BooleanField(default=False)),
                ('for_fundraise_page', models.BooleanField(default=False)),
                ('for_every_month_report', models.BooleanField(default=False)),
                ('display_in_main', models.BooleanField(default=False)),
                ('already_activated', models.BooleanField(default=True)),
                ('frontend_registered', models.BooleanField(default=False)),
                ('meta_title', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Meta Page Title')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name=b'Meta Description')),
                ('donation_min_amount', models.IntegerField(blank=True, null=True)),
                ('action_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('action_type', models.CharField(choices=[('I', 'Created'), ('U', 'Changed'), ('D', 'Deleted')], editable=False, max_length=1)),
                ('action_user', LastUserField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='_ngo_audit_log_entry', to=settings.AUTH_USER_MODEL)),
                ('cause', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='_auditlog_cso_causes', to='NGO.Cause', verbose_name=b'Primary Cause')),
                ('contact_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_auditlog_cso_contactperson', to='mcms.UserProfile')),
            ],
            options={
                'ordering': ('-action_date',),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='NgoCommunication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('web_address', models.URLField(blank=True, verbose_name=b'Web or Blog Address')),
                ('phone1', models.CharField(blank=True, max_length=15, null=True, verbose_name=b'Phone1')),
                ('phone2', models.CharField(blank=True, max_length=15, null=True, verbose_name=b'Phone2')),
                ('phone3', models.CharField(blank=True, max_length=15, null=True, verbose_name=b'Phone3')),
                ('mobile', models.CharField(blank=True, max_length=15, null=True, verbose_name=b'mobile')),
                ('fax', models.CharField(blank=True, max_length=400, null=True, verbose_name=b'Fax')),
                ('ngo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NGO.NGO')),
            ],
            options={
                'db_table': 'NGO_ngo_communication',
            },
        ),
        migrations.CreateModel(
            name='NgoKeywords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('active', models.IntegerField(default=2)),
            ],
            options={
                'db_table': 'NGO_ngo_keywords',
            },
        ),
        migrations.CreateModel(
            name='NgoSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('plan', models.CharField(choices=[(b'Basic', b'Basic'), (b'Essential', b'Essential'), (b'Premium', b'Premium')], max_length=100)),
                ('valid_from', models.DateField()),
                ('valid_to', models.DateField()),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('amount', models.PositiveIntegerField()),
                ('payment_type', models.CharField(blank=True, max_length=30, null=True)),
                ('paid_on', models.DateTimeField(auto_now_add=True)),
                ('txnid', models.CharField(max_length=100, verbose_name=b'Transaction Id')),
                ('product_info', models.CharField(max_length=80, verbose_name='Product Info')),
                ('approved_on', models.DateTimeField(blank=True, null=True, verbose_name=b'Approved On')),
                ('payment_status', models.CharField(choices=[('Success', 'Success'), ('Failure', 'Failure'), ('Pending', 'Pending'), ('Cancel', 'Cancel')], max_length=80, verbose_name='Payment Status')),
                ('mode', models.CharField(blank=True, max_length=80, null=True, verbose_name='Mode')),
                ('reciept_no', models.CharField(max_length=80, verbose_name='VPC_Reciept No.')),
                ('error_text', models.CharField(blank=True, max_length=100, null=True)),
                ('ngo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NGO.NGO')),
            ],
            options={
                'db_table': 'NGO_ngo_subscription',
            },
        ),
        migrations.CreateModel(
            name='OfflineDonation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('donor_name', models.CharField(max_length=200, verbose_name='Name of the Donor *')),
                ('email', models.EmailField(max_length=100, verbose_name=b'Email of the Donor *')),
                ('landline_no', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Landline Number')),
                ('mobile', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Mobile Number')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Amount for donation *')),
                ('pan_card', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Pan Card Number')),
                ('address1', models.TextField(blank=True, null=True, verbose_name='Residential Address of the Donor')),
                ('address2', models.TextField(blank=True, null=True, verbose_name='Office address of the Donor')),
                ('payment_mode', models.CharField(blank=True, choices=[(b'Cash', b'Cash'), (b'Cheque/DD', b'Cheque/DD'), (b'Bank transfer', b'Bank transfer'), (b'NGO Website', b'CSO Website')], max_length=200, null=True, verbose_name=b'Payment Mode')),
                ('cheque_no', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Cheque Number')),
                ('bank_name', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Bank Name')),
                ('image_of_cheque', models.FileField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'Image of Cheque')),
                ('date', models.CharField(blank=True, max_length=30, null=True, verbose_name=b'Date of Donation')),
                ('fundraiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Donate_NGO_fundraiser', to='NGO.Fundraiser')),
                ('ngo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NGO.NGO')),
            ],
            options={
                'db_table': 'NGO_offline_donation',
            },
        ),
        migrations.CreateModel(
            name='OtherDonation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=80, verbose_name='name*')),
                ('email', models.EmailField(max_length=60, verbose_name=b'Email*')),
                ('amount', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='Amount for donation*')),
                ('company', models.CharField(max_length=80, verbose_name='name*')),
                ('ngo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NGO.NGO')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParticipateFundraiserinEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('is_donated', models.BooleanField(default=False)),
                ('is_page_created', models.BooleanField(default=False)),
                ('is_old_user', models.BooleanField(default=False)),
                ('fundraiser_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fundraiser_typeparticipated', to='NGO.FundraiserType')),
                ('fundraisers', models.ManyToManyField(related_name='participate_fundraiser_in_event', to='NGO.Fundraiser')),
                ('ngo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NGO.NGO')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fundraiser_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VolunteerRequirements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100, verbose_name='Title*')),
                ('icon', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('description', ckeditor.fields.RichTextField(blank=True, max_length=150, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('skills', models.CharField(blank=True, max_length=100, null=True)),
                ('duration', models.CharField(blank=True, max_length=100, null=True)),
                ('minimum_period', models.CharField(blank=True, max_length=100, null=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'db_table': 'NGO_volunteer_requirements',
            },
        ),
        migrations.CreateModel(
            name='Volunteers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100, verbose_name=b'Name')),
                ('location', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Location')),
                ('phone_no', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Tel No')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name=b'Email')),
                ('skill', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Skill')),
                ('message', models.TextField(blank=True, max_length=200, null=True, verbose_name=b'Message')),
                ('ngo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NGO.NGO')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='ngo',
            name='ngo_keywords',
            field=models.ManyToManyField(to='NGO.NgoKeywords'),
        ),
        migrations.AddField(
            model_name='ngo',
            name='secondary_cause',
            field=models.ManyToManyField(blank=True, null=True, related_name='cso_secondarycause', to='NGO.Cause', verbose_name=b'Secondary Cause (Click on cause to select and unselect)'),
        ),
        migrations.AddField(
            model_name='fundraiserauditlogentry',
            name='fundraiser_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='_auditlog_fundraiser_relatedname', to='NGO.FundraiserType'),
        ),
        migrations.AddField(
            model_name='fundraiserauditlogentry',
            name='ngo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='_auditlog_fundraiser_ngos', to='NGO.NGO'),
        ),
        migrations.AddField(
            model_name='fundraiser',
            name='fundraiser_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fundraiser_relatedname', to='NGO.FundraiserType'),
        ),
        migrations.AddField(
            model_name='fundraiser',
            name='ngo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fundraiser_ngos', to='NGO.NGO'),
        ),
        migrations.AddField(
            model_name='duplicatecorporates',
            name='many_ngos',
            field=models.ManyToManyField(related_name='duplicate_corporate_csos', to='NGO.NGO'),
        ),
        migrations.AddField(
            model_name='duplicatecorporates',
            name='ngo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NGO.NGO'),
        ),
        migrations.AddField(
            model_name='donation',
            name='fundraiser',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='NGO_fundraiser', to='NGO.Fundraiser'),
        ),
        migrations.AddField(
            model_name='donation',
            name='ngo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NGO.NGO'),
        ),
        migrations.AddField(
            model_name='donation',
            name='pfe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NGO.ParticipateFundraiserinEvent'),
        ),
        migrations.AddField(
            model_name='charitybib',
            name='donation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NGO.Donation'),
        ),
    ]
