# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2019-01-21 13:40
from __future__ import unicode_literals

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mcms.thumbs


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mcms', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CSR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=150, verbose_name=b'Name of the CSR*')),
                ('reg_no', models.CharField(max_length=40, verbose_name=b'Charity Registration No*')),
                ('web_address', models.URLField(blank=True, verbose_name=b'Web or Blog Address')),
                ('validity_80G', models.CharField(choices=[('NA', b'Not Applicable'), ('PM', b'Permanent'), ('PD', b'Pending'), ('VA', b'Valid')], max_length=50, verbose_name=b'80G Validity')),
                ('validity_80G_date', models.DateField(blank=True, null=True, verbose_name=b'80G Validity Till')),
                ('validity_35AC', models.CharField(choices=[('NA', b'Not Applicable'), ('VA', b'Valid')], max_length=50, verbose_name=b'35 AC Validity')),
                ('validity_35AC_date', models.DateField(blank=True, null=True, verbose_name=b'35AC Validity Till')),
                ('acronym', models.CharField(blank=True, max_length=10, null=True, verbose_name=b'ACRONYM')),
                ('fcra', models.CharField(blank=True, choices=[('NA', b'Not Applicable'), ('VA', b'Applicable')], max_length=50, null=True, verbose_name=b'FCRA NO *')),
                ('fcra_text', models.CharField(blank=True, max_length=30, null=True, verbose_name=b'FCRA NO.')),
                ('fcra_date', models.DateField(blank=True, null=True, verbose_name=b'FCRA Validity Till')),
                ('established_on', models.DateField(verbose_name=b'Year Founded*')),
                ('regn_type', models.CharField(choices=[('Trust', 'Trust'), ('Society', 'Society'), ('Pvt Ltd Company', 'Pvt Ltd Company'), ('Section 25 Company', 'Section 25 Company'), ('Others', 'Others')], max_length=30, verbose_name=b'Regn Type*')),
                ('icon', mcms.thumbs.ImageWithThumbsField(blank=True, help_text=b'Upload Logo of size 90x120.', null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('latest_fin', models.FileField(blank=True, help_text=b'Upload files in Pdf', null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'Latest Financials')),
                ('size', models.CharField(choices=[('VS', b'Very Small 0-0.99 Lakh'), ('S', b'Small 0-2.99 Crore'), ('M', b'Medium 3-7.99 Crore'), ('L', b'Large 8 and above')], max_length=3, verbose_name=b'Turnover/Size*')),
                ('our_mission', ckeditor.fields.RichTextField(verbose_name=b'Mission Statement*')),
                ('work_acheivement', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name=b'Work Achievements')),
                ('youtube_embedd', models.URLField(blank=True, verbose_name=b'Youtube Embedded Link')),
                ('slug', models.SlugField(blank=True, verbose_name='Slug')),
                ('fund_utilisation_statement', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Fund Utilisation statement')),
                ('black_board_message', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name=b'Black board messages')),
                ('reference', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Reference ID')),
                ('goal_amount', models.PositiveIntegerField()),
                ('contact_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mcms.UserProfile')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name_plural': 'CSR',
            },
        ),
        migrations.CreateModel(
            name='CsrCommunication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('web_address', models.URLField(blank=True, verbose_name=b'Web or Blog Address')),
                ('phone1', models.CharField(blank=True, max_length=15, null=True, verbose_name=b'Phone1')),
                ('phone2', models.CharField(blank=True, max_length=15, null=True, verbose_name=b'Phone2')),
                ('phone3', models.CharField(blank=True, max_length=15, null=True, verbose_name=b'Phone3')),
                ('mobile', models.CharField(blank=True, max_length=15, null=True, verbose_name=b'mobile')),
                ('fax', models.CharField(blank=True, max_length=400, null=True, verbose_name=b'Fax')),
                ('csr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csr.CSR')),
            ],
            options={
                'db_table': 'csr_csr_communication',
            },
        ),
        migrations.CreateModel(
            name='CsrProjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Project Name *')),
                ('title', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Title *')),
                ('slug', models.SlugField(max_length=500, verbose_name='Pick a URL people can remember: *')),
                ('summary', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name=b'Summary')),
                ('about_us', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name=b'About Us')),
                ('duration', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Duration')),
                ('total_budget', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Total Budget')),
                ('amount_in_number', models.IntegerField(blank=True, null=True, verbose_name=b'Budget in digits')),
                ('location', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Location')),
                ('no_to_be_impacted', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Numbers to be impacted')),
                ('contact_person', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Contact Peron')),
                ('phone', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Phone Number')),
                ('email', models.EmailField(blank=True, max_length=500, null=True, verbose_name=b'Email')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CsrUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('phoneno', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Mobile Number')),
                ('cname', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Company Name')),
                ('subscribed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
