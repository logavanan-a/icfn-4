# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2019-01-21 13:53
from __future__ import unicode_literals

# import audit_log.models.fields
from audit_log import registration
import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mcms.thumbs

class LastUserField(models.ForeignKey):
    """
    A field that keeps the last user that saved an instance
    of a model. None will be the value for AnonymousUser.
    """
    
    def __init__(self, to = getattr(settings, 'AUTH_USER_MODEL', 'auth.User'), null = True, editable = False,  **kwargs):
        super(LastUserField, self).__init__(to = to, null = null, editable = editable, **kwargs)
    
    def contribute_to_class(self, cls, name):
        super(LastUserField, self).contribute_to_class(cls, name)
        registry = registration.FieldRegistry(self.__class__)
        registry.add_field(cls, self)

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('mcms', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AllowedCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('slug', models.SlugField(verbose_name=b'Slug')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContributingHotels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'Icon')),
                ('url', models.URLField(blank=True, max_length=100, null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=60, verbose_name=b'SEO friendly url, use only aplhabets and hyphen')),
            ],
            options={
                'db_table': 'Events_contributing_hotels',
            },
        ),
        migrations.CreateModel(
            name='CorporateTables',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d', verbose_name=b'Icon')),
                ('url', models.URLField(blank=True, max_length=100, null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=60, verbose_name=b'SEO friendly url, use only aplhabets and hyphen')),
            ],
            options={
                'db_table': 'Events_corporate_tables',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('event_type', models.CharField(blank=True, choices=[('Marathon', 'Marathon'), ('Daan Utsav', 'Daan Utsav'), ('Cyclothon', 'Cyclothon'), ('Campaign', 'Campaign'), ('Others', 'Others')], max_length=400, null=True, verbose_name=b'Event Type')),
                ('name', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('slug', models.SlugField(verbose_name=b'Slug')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name=b'Start date')),
                ('end_date', models.DateField(blank=True, null=True)),
                ('widget', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('widget_icon', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('accept_donation', models.BooleanField(default=True)),
                ('color', models.CharField(blank=True, max_length=100, null=True)),
                ('wishtree_color', models.CharField(blank=True, max_length=100, null=True)),
                ('wishtree_logo', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('wishtree_classname', models.CharField(blank=True, max_length=100, null=True)),
                ('display_name', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Name')),
                ('display_one_name', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Name')),
                ('summary', models.TextField(blank=True, null=True)),
                ('small_image', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('main_page_logo', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('main_page_date', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Event Date')),
                ('listing_order', models.IntegerField(default=1)),
                ('meta_title', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Meta Page Title')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name=b'Meta Description')),
                ('event_email', models.EmailField(blank=True, max_length=100, null=True, verbose_name=b'Event Email ID')),
                ('join_us_logo', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('display_in_joinus', models.BooleanField(default=False)),
                ('home_page_widget', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('external_url', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'External URL')),
                ('target', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Target amount')),
                ('fundraiser_donation', models.BooleanField(default=False)),
                ('fundraiser_donation_amount', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Fundraiser Donation Amount')),
                ('contributing_hotels', models.ManyToManyField(to='Events.ContributingHotels')),
                ('corporate_tables', models.ManyToManyField(to='Events.CorporateTables')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventAboutUs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('event_link', models.URLField(blank=True, max_length=100, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Events.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventAmountDeduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('etype', models.CharField(blank=True, choices=[(b'Other', b'Other'), (b'Wishtree', b'Wishtree')], default=b'Other', max_length=100, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name=b'Start date')),
                ('end_date', models.DateField(blank=True, null=True)),
                ('percent', models.IntegerField()),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Events.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('display', models.CharField(blank=True, choices=[('1', 'Home Page')], max_length=400, null=True, verbose_name=b'Display')),
                ('summary', models.CharField(blank=True, max_length=2000, null=True, verbose_name=b'Byline/ Summary')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('image', mcms.thumbs.ImageWithThumbsField(blank=True, help_text=b'Image size should be 930x300 pixels', null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('slug', models.SlugField(max_length=60, verbose_name=b'SEO friendly url, use only aplhabets and hyphen')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventAuditLogEntry',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('event_type', models.CharField(blank=True, choices=[('Marathon', 'Marathon'), ('Daan Utsav', 'Daan Utsav'), ('Cyclothon', 'Cyclothon'), ('Campaign', 'Campaign'), ('Others', 'Others')], max_length=400, null=True, verbose_name=b'Event Type')),
                ('name', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('slug', models.SlugField(verbose_name=b'Slug')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name=b'Start date')),
                ('end_date', models.DateField(blank=True, null=True)),
                ('widget', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('widget_icon', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('accept_donation', models.BooleanField(default=True)),
                ('color', models.CharField(blank=True, max_length=100, null=True)),
                ('wishtree_color', models.CharField(blank=True, max_length=100, null=True)),
                ('wishtree_logo', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('wishtree_classname', models.CharField(blank=True, max_length=100, null=True)),
                ('display_name', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Name')),
                ('display_one_name', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Name')),
                ('summary', models.TextField(blank=True, null=True)),
                ('small_image', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('main_page_logo', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('main_page_date', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Event Date')),
                ('listing_order', models.IntegerField(default=1)),
                ('meta_title', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Meta Page Title')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name=b'Meta Description')),
                ('event_email', models.EmailField(blank=True, max_length=100, null=True, verbose_name=b'Event Email ID')),
                ('join_us_logo', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('display_in_joinus', models.BooleanField(default=False)),
                ('home_page_widget', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('external_url', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'External URL')),
                ('target', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Target amount')),
                ('fundraiser_donation', models.BooleanField(default=False)),
                ('fundraiser_donation_amount', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Fundraiser Donation Amount')),
                ('action_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('action_type', models.CharField(choices=[('I', 'Created'), ('U', 'Changed'), ('D', 'Deleted')], editable=False, max_length=1)),
                ('action_user', LastUserField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='_event_audit_log_entry', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-action_date',),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='EventAwards',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('slug', models.SlugField(verbose_name=b'Slug')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Events.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventBanners',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('image', mcms.thumbs.ImageWithThumbsField(blank=True, help_text=b'Image size should be 930x300 pixels', null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('caption', models.CharField(blank=True, max_length=50, null=True, verbose_name=b'Caption')),
                ('description', models.CharField(blank=True, max_length=300, null=True, verbose_name=b'Description')),
                ('URL', models.URLField(blank=True, verbose_name=b'Link url')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventContactUs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('latitude', models.CharField(blank=True, max_length=100, null=True)),
                ('longitude', models.CharField(blank=True, max_length=100, null=True)),
                ('phone1', models.CharField(blank=True, max_length=100, null=True)),
                ('phone2', models.CharField(blank=True, max_length=100, null=True)),
                ('email1', models.EmailField(max_length=60, verbose_name=b'Email*')),
                ('email2', models.EmailField(blank=True, max_length=60, null=True, verbose_name=b'Email*')),
                ('address1', models.CharField(blank=True, max_length=100, null=True)),
                ('address2', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('pincode', models.CharField(blank=True, max_length=100, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Events.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventNgoDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('contact_person', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('work_acheivement', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name=b'Our Work')),
                ('fund_utilisation_statement', models.CharField(blank=True, max_length=300, null=True, verbose_name=b'Fund Utilisation statement')),
                ('our_mission', models.TextField(blank=True, null=True, verbose_name=b'Mission Statement')),
                ('youtube_embedd', models.URLField(blank=True, null=True, verbose_name=b'Youtube Embedded Link')),
                ('black_board_message', models.TextField(blank=True, null=True, verbose_name=b'Black board messages')),
                ('web_address', models.URLField(blank=True, null=True, verbose_name=b'Web Address')),
                ('phone1', models.CharField(blank=True, max_length=15, null=True, verbose_name=b'Phone1')),
                ('mobile', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Mobile')),
                ('address1', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Address1')),
                ('address2', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Address2')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'City')),
                ('pincode', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Pincode')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mcms.Country')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Events.Event')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mcms.State')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventRunReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('slug', models.SlugField(verbose_name=b'Slug')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Events.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventSuccessStoreis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('slug', models.SlugField(verbose_name=b'Slug')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Events.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventThankMsg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('image', mcms.thumbs.ImageWithThumbsField(blank=True, null=True, upload_to=b'static/v2/%Y/%m/%d')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Events.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
